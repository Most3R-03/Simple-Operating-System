	.file	"bootpack.c"
	.data
_keytable0.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	0
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	0
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
_keytable1.1:
	.byte	0
	.byte	0
	.byte	33
	.byte	34
	.byte	35
	.byte	36
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	126
	.byte	61
	.byte	126
	.byte	0
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	96
	.byte	123
	.byte	0
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	43
	.byte	42
	.byte	0
	.byte	0
	.byte	125
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	60
	.byte	62
	.byte	63
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	124
	.byte	0
	.byte	0
LC0:
	.ascii "console\0"
LC1:
	.ascii "task_a\0"
LC2:
	.ascii " \0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$1096, %esp
	movl	$0, -1092(%ebp)
	movl	$0, -1096(%ebp)
	movb	4081, %al
	sarb	$4, %al
	movl	%eax, %edx
	andl	$7, %edx
	movl	%edx, -1100(%ebp)
	movl	$-1, -1104(%ebp)
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	leal	-636(%ebp), %eax
	pushl	$0
	pushl	%eax
	leal	-92(%ebp), %eax
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	call	_init_pit
	leal	-92(%ebp), %edx
	pushl	$256
	pushl	%edx
	call	_init_keyboard
	leal	-780(%ebp), %eax
	pushl	%eax
	leal	-92(%ebp), %eax
	pushl	$512
	pushl	%eax
	call	_enable_mouse
	addl	$36, %esp
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	leal	-124(%ebp), %edx
	pushl	$0
	leal	-764(%ebp), %eax
	pushl	%eax
	pushl	$32
	pushl	%edx
	call	_fifo32_init
	addl	$32, %esp
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	$3932160
	movl	%eax, -1056(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	$3932160
	call	_memman_free
	movl	-1056(%ebp), %eax
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	addl	$36, %esp
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	pushl	$3932160
	call	_shtctl_init
	pushl	$3932160
	movl	%eax, %esi
	call	_task_init
	pushl	$2
	pushl	$1
	movl	%eax, -1080(%ebp)
	pushl	%eax
	movl	%eax, -68(%ebp)
	call	_task_run
	addl	$32, %esp
	pushl	%esi
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -1068(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, %ebx
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	pushl	-1068(%ebp)
	call	_sheet_setbuf
	addl	$32, %esp
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	leal	-1036(%ebp), %ebx
	call	_init_screen8
	pushl	%esi
	call	_sheet_alloc
	pushl	$42240
	pushl	$3932160
	movl	%eax, -1076(%ebp)
	call	_memman_alloc_4k
	pushl	$-1
	pushl	$165
	movl	%eax, -1064(%ebp)
	pushl	$256
	pushl	%eax
	pushl	-1076(%ebp)
	call	_sheet_setbuf
	addl	$44, %esp
	pushl	$0
	pushl	$LC0
	pushl	$165
	pushl	$256
	pushl	-1064(%ebp)
	call	_make_window8
	pushl	$0
	pushl	$128
	pushl	$240
	pushl	$28
	pushl	$8
	pushl	-1076(%ebp)
	call	_make_textbox8
	addl	$44, %esp
	call	_task_alloc
	pushl	$65536
	pushl	$3932160
	movl	%eax, -1084(%ebp)
	call	_memman_alloc_4k
	movl	-1084(%ebp), %edx
	addl	$65524, %eax
	movl	%eax, 100(%edx)
	movl	$_console_task, 76(%edx)
	movl	$8, 116(%edx)
	movl	$16, 120(%edx)
	movl	$8, 124(%edx)
	movl	$8, 128(%edx)
	movl	$8, 132(%edx)
	movl	$8, 136(%edx)
	movl	-1076(%ebp), %edx
	movl	%edx, 4(%eax)
	movl	-1084(%ebp), %edx
	movl	100(%edx), %eax
	movl	-1056(%ebp), %edx
	movl	%edx, 8(%eax)
	pushl	$2
	pushl	$2
	pushl	-1084(%ebp)
	call	_task_run
	pushl	%esi
	call	_sheet_alloc
	pushl	$8320
	pushl	$3932160
	movl	%eax, %edi
	call	_memman_alloc_4k
	addl	$32, %esp
	pushl	$-1
	movl	%eax, -1060(%ebp)
	pushl	$52
	pushl	$144
	pushl	%eax
	pushl	%edi
	call	_sheet_setbuf
	pushl	$1
	pushl	$LC1
	pushl	$52
	pushl	$144
	pushl	-1060(%ebp)
	call	_make_window8
	addl	$40, %esp
	pushl	$7
	pushl	$16
	pushl	$128
	pushl	$28
	pushl	$8
	pushl	%edi
	call	_make_textbox8
	movl	$8, -1048(%ebp)
	movl	$7, -1052(%ebp)
	call	_timer_alloc
	pushl	$1
	movl	%eax, -1088(%ebp)
	leal	-92(%ebp), %eax
	pushl	%eax
	pushl	-1088(%ebp)
	call	_timer_init
	addl	$36, %esp
	pushl	$50
	pushl	-1088(%ebp)
	call	_timer_settime
	pushl	%esi
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	pushl	$16
	movl	%eax, -1072(%ebp)
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -1040(%ebp)
	movswl	4086,%eax
	pushl	$0
	leal	-44(%eax), %ecx
	pushl	$0
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	pushl	-1068(%ebp)
	movl	%eax, -1044(%ebp)
	call	_sheet_slide
	pushl	$4
	pushl	$32
	pushl	-1076(%ebp)
	call	_sheet_slide
	addl	$32, %esp
	pushl	$56
	pushl	$64
	pushl	%edi
	call	_sheet_slide
	pushl	-1044(%ebp)
	pushl	-1040(%ebp)
	pushl	-1072(%ebp)
	call	_sheet_slide
	pushl	$0
	pushl	-1068(%ebp)
	call	_sheet_updown
	addl	$32, %esp
	pushl	$1
	pushl	-1076(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	%edi
	call	_sheet_updown
	pushl	$3
	pushl	-1072(%ebp)
	call	_sheet_updown
	leal	-124(%ebp), %edx
	pushl	$237
	pushl	%edx
	call	_fifo32_put
	leal	-124(%ebp), %eax
	addl	$32, %esp
	pushl	-1100(%ebp)
	pushl	%eax
	call	_fifo32_put
	popl	%ecx
	popl	%ebx
L2:
	leal	-124(%ebp), %ebx
	pushl	%ebx
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	jle	L5
	cmpl	$0, -1104(%ebp)
	js	L57
L5:
	leal	-92(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%esi
	testl	%eax, %eax
	je	L58
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, %esi
	call	_io_sti
	popl	%edx
	leal	-256(%esi), %eax
	cmpl	$255, %eax
	jbe	L59
	leal	-512(%esi), %eax
	cmpl	$255, %eax
	jbe	L60
	cmpl	$1, %esi
	jg	L2
	testl	%esi, %esi
	je	L50
	pushl	$0
	pushl	%ebx
	pushl	-1088(%ebp)
	call	_timer_init
	addl	$12, %esp
	cmpl	$0, -1052(%ebp)
	js	L52
	movl	$0, -1052(%ebp)
L52:
	pushl	$50
	pushl	-1088(%ebp)
	call	_timer_settime
	popl	%eax
	popl	%edx
	cmpl	$0, -1052(%ebp)
	js	L2
	movl	-1048(%ebp), %eax
	pushl	$43
	addl	$7, %eax
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	movzbl	-1052(%ebp), %eax
	pushl	%eax
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	movl	-1048(%ebp), %eax
	pushl	$44
	addl	$8, %eax
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	pushl	%edi
	call	_sheet_refresh
	addl	$48, %esp
	jmp	L2
L50:
	pushl	$1
	pushl	%ebx
	pushl	-1088(%ebp)
	call	_timer_init
	addl	$12, %esp
	cmpl	$0, -1052(%ebp)
	js	L52
	movl	$7, -1052(%ebp)
	jmp	L52
L60:
	movl	%esi, %edx
	movzbl	%dl, %eax
	pushl	%eax
	leal	-780(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%ecx
	popl	%ebx
	testl	%eax, %eax
	je	L2
	movl	-772(%ebp), %eax
	movl	-776(%ebp), %edx
	addl	%eax, -1044(%ebp)
	addl	%edx, -1040(%ebp)
	js	L61
L43:
	cmpl	$0, -1044(%ebp)
	js	L62
L44:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, -1040(%ebp)
	jle	L45
	movl	%eax, -1040(%ebp)
L45:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, -1044(%ebp)
	jle	L46
	movl	%eax, -1044(%ebp)
L46:
	pushl	-1044(%ebp)
	pushl	-1040(%ebp)
	pushl	-1072(%ebp)
	call	_sheet_slide
	addl	$12, %esp
	testl	$1, -768(%ebp)
	je	L2
	movl	-1044(%ebp), %eax
	subl	$8, %eax
	pushl	%eax
	movl	-1040(%ebp), %eax
	subl	$80, %eax
	pushl	%eax
	pushl	%edi
	call	_sheet_slide
	addl	$12, %esp
	jmp	L2
L62:
	movl	$0, -1044(%ebp)
	jmp	L44
L61:
	movl	$0, -1040(%ebp)
	jmp	L43
L59:
	cmpl	$383, %esi
	jg	L9
	cmpl	$0, -1096(%ebp)
	jne	L10
	movb	_keytable0.0-256(%esi), %al
L56:
	movb	%al, -60(%ebp)
L12:
	movb	-60(%ebp), %dl
	leal	-65(%edx), %eax
	cmpb	$25, %al
	ja	L13
	testl	$4, -1100(%ebp)
	jne	L55
	cmpl	$0, -1096(%ebp)
	je	L15
L13:
	movb	-60(%ebp), %al
	testb	%al, %al
	je	L17
	cmpl	$0, -1092(%ebp)
	jne	L18
	cmpl	$127, -1048(%ebp)
	jg	L17
	pushl	$1
	leal	-60(%ebp), %eax
	pushl	%eax
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	-1048(%ebp)
	pushl	%edi
	movb	$0, -59(%ebp)
	call	_putfonts8_asc_sht
	addl	$28, %esp
	addl	$8, -1048(%ebp)
L17:
	cmpl	$270, %esi
	je	L63
L21:
	cmpl	$284, %esi
	je	L64
L25:
	cmpl	$271, %esi
	je	L65
L27:
	cmpl	$298, %esi
	je	L66
L30:
	cmpl	$310, %esi
	je	L67
L31:
	cmpl	$426, %esi
	je	L68
L32:
	cmpl	$438, %esi
	je	L69
L33:
	cmpl	$314, %esi
	je	L70
L34:
	cmpl	$325, %esi
	je	L71
L35:
	cmpl	$326, %esi
	je	L72
L36:
	cmpl	$506, %esi
	je	L73
L37:
	cmpl	$510, %esi
	je	L74
L38:
	cmpl	$0, -1052(%ebp)
	js	L39
	movl	-1048(%ebp), %eax
	pushl	$43
	addl	$7, %eax
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	movzbl	-1052(%ebp), %eax
	pushl	%eax
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	addl	$28, %esp
L39:
	movl	-1048(%ebp), %eax
	pushl	$44
	addl	$8, %eax
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	pushl	%edi
	call	_sheet_refresh
	addl	$20, %esp
	jmp	L2
L74:
	call	_wait_KBC_sendready
	pushl	-1104(%ebp)
	pushl	$96
	call	_io_out8
	popl	%esi
	popl	%eax
	jmp	L38
L73:
	movl	$-1, -1104(%ebp)
	jmp	L37
L72:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$1, -1100(%ebp)
	call	_fifo32_put
	pushl	-1100(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L36
L71:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$2, -1100(%ebp)
	call	_fifo32_put
	pushl	-1100(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L35
L70:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$4, -1100(%ebp)
	call	_fifo32_put
	pushl	-1100(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L34
L69:
	andl	$-3, -1096(%ebp)
	jmp	L33
L68:
	andl	$-2, -1096(%ebp)
	jmp	L32
L67:
	orl	$2, -1096(%ebp)
	jmp	L31
L66:
	orl	$1, -1096(%ebp)
	jmp	L30
L65:
	cmpl	$0, -1092(%ebp)
	jne	L28
	pushl	$0
	pushl	$LC1
	pushl	4(%edi)
	pushl	-1060(%ebp)
	movl	$1, -1092(%ebp)
	call	_make_wtitle8
	movl	-1076(%ebp), %edx
	pushl	$1
	pushl	$LC0
	pushl	4(%edx)
	pushl	-1064(%ebp)
	call	_make_wtitle8
	movl	-1048(%ebp), %eax
	addl	$32, %esp
	addl	$7, %eax
	movl	$-1, -1052(%ebp)
	pushl	$43
	pushl	%eax
	pushl	$28
	pushl	-1048(%ebp)
	pushl	$7
	pushl	4(%edi)
	pushl	(%edi)
	call	_boxfill8
	movl	-1084(%ebp), %eax
	pushl	$2
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	addl	$36, %esp
L29:
	pushl	$21
	pushl	4(%edi)
	pushl	$0
	pushl	$0
	pushl	%edi
	call	_sheet_refresh
	movl	-1076(%ebp), %edx
	pushl	$21
	pushl	4(%edx)
	pushl	$0
	pushl	$0
	pushl	%edx
	call	_sheet_refresh
	addl	$40, %esp
	jmp	L27
L28:
	pushl	$1
	pushl	$LC1
	pushl	4(%edi)
	pushl	-1060(%ebp)
	movl	$0, -1092(%ebp)
	call	_make_wtitle8
	movl	-1076(%ebp), %eax
	pushl	$0
	pushl	$LC0
	pushl	4(%eax)
	pushl	-1064(%ebp)
	call	_make_wtitle8
	movl	-1084(%ebp), %eax
	addl	$32, %esp
	addl	$16, %eax
	movl	$0, -1052(%ebp)
	pushl	$3
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L29
L64:
	cmpl	$0, -1092(%ebp)
	je	L25
	movl	-1084(%ebp), %eax
	pushl	$266
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%ecx
	popl	%ebx
	jmp	L25
L63:
	cmpl	$0, -1092(%ebp)
	jne	L22
	cmpl	$8, -1048(%ebp)
	jle	L21
	pushl	$1
	pushl	$LC2
	pushl	$7
	pushl	$0
	pushl	$28
	pushl	-1048(%ebp)
	pushl	%edi
	call	_putfonts8_asc_sht
	addl	$28, %esp
	subl	$8, -1048(%ebp)
	jmp	L21
L22:
	movl	-1084(%ebp), %eax
	pushl	$264
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L21
L18:
	movsbl	%al,%eax
	addl	$256, %eax
	pushl	%eax
	movl	-1084(%ebp), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%ecx
	popl	%ebx
	jmp	L17
L15:
	leal	32(%edx), %eax
	movb	%al, -60(%ebp)
	jmp	L13
L55:
	cmpl	$0, -1096(%ebp)
	je	L13
	jmp	L15
L10:
	movb	_keytable1.1-256(%esi), %al
	jmp	L56
L9:
	movb	$0, -60(%ebp)
	jmp	L12
L58:
	pushl	-1080(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%ecx
	jmp	L2
L57:
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1104(%ebp)
	call	_wait_KBC_sendready
	pushl	-1104(%ebp)
	pushl	$96
	call	_io_out8
	addl	$12, %esp
	jmp	L5
	.balign 2
.globl _make_window8
	.def	_make_window8;	.scl	2;	.type	32;	.endef
_make_window8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$24, %esp
	movl	16(%ebp), %eax
	movl	12(%ebp), %ebx
	movl	%eax, -16(%ebp)
	movl	8(%ebp), %esi
	movl	20(%ebp), %eax
	movl	%eax, -20(%ebp)
	movsbl	24(%ebp),%eax
	movl	%eax, -24(%ebp)
	leal	-1(%ebx), %eax
	pushl	$0
	movl	%eax, -28(%ebp)
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	$8
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	leal	-2(%ebx), %eax
	pushl	$1
	movl	%eax, -32(%ebp)
	pushl	%eax
	pushl	$1
	pushl	$1
	pushl	$7
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	movl	-16(%ebp), %eax
	addl	$56, %esp
	decl	%eax
	movl	%eax, -36(%ebp)
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	$0
	pushl	$8
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	movl	-16(%ebp), %edi
	subl	$2, %edi
	pushl	%edi
	pushl	$1
	pushl	$1
	pushl	$1
	pushl	$7
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	addl	$56, %esp
	pushl	%edi
	pushl	-32(%ebp)
	pushl	$1
	pushl	-32(%ebp)
	pushl	$15
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	pushl	-36(%ebp)
	pushl	-28(%ebp)
	pushl	$0
	pushl	-28(%ebp)
	pushl	$0
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	movl	-16(%ebp), %eax
	addl	$56, %esp
	subl	$3, %eax
	pushl	%eax
	leal	-3(%ebx), %eax
	pushl	%eax
	pushl	$2
	pushl	$2
	pushl	$8
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	pushl	%edi
	pushl	-32(%ebp)
	pushl	%edi
	pushl	$1
	pushl	$15
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	addl	$56, %esp
	pushl	-36(%ebp)
	pushl	-28(%ebp)
	pushl	-36(%ebp)
	pushl	$0
	pushl	$0
	pushl	%ebx
	pushl	%esi
	call	_boxfill8
	movl	%esi, 8(%ebp)
	movl	-24(%ebp), %eax
	movl	%ebx, 12(%ebp)
	movl	%eax, 20(%ebp)
	addl	$28, %esp
	movl	-20(%ebp), %eax
	movl	%eax, 16(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_make_wtitle8
	.data
_closebtn.2:
	.ascii "OOOOOOOOOOOOOOO@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQ@@QQQQ@@QQ$@"
	.ascii "OQQQQ@@QQ@@QQQ$@"
	.ascii "OQQQQQ@@@@QQQQ$@"
	.ascii "OQQQQQQ@@QQQQQ$@"
	.ascii "OQQQQQ@@@@QQQQ$@"
	.ascii "OQQQQ@@QQ@@QQQ$@"
	.ascii "OQQQ@@QQQQ@@QQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "O$$$$$$$$$$$$$$@"
	.ascii "@@@@@@@@@@@@@@@@"
	.text
	.balign 2
.globl _make_wtitle8
	.def	_make_wtitle8;	.scl	2;	.type	32;	.endef
_make_wtitle8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	pushl	%esi
	cmpb	$0, 20(%ebp)
	je	L77
	movb	$7, %bl
	movb	$12, %dl
L78:
	movl	12(%ebp), %eax
	pushl	$20
	subl	$4, %eax
	xorl	%edi, %edi
	pushl	%eax
	pushl	$3
	pushl	$3
	movzbl	%dl, %eax
	pushl	%eax
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_boxfill8
	pushl	16(%ebp)
	movsbl	%bl,%eax
	pushl	%eax
	pushl	$4
	pushl	$24
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_putfonts8_asc
	addl	$52, %esp
	imull	$5, 12(%ebp), %ebx
	movl	$0, -16(%ebp)
L94:
	movl	12(%ebp), %eax
	movl	8(%ebp), %edx
	addl	%ebx, %eax
	xorl	%esi, %esi
	leal	-21(%edx,%eax), %ecx
L93:
	movb	_closebtn.2(%esi,%edi), %dl
	cmpb	$64, %dl
	je	L99
	cmpb	$36, %dl
	je	L100
	cmpb	$81, %dl
	movb	$8, %dl
	setne	%al
	subb	%al, %dl
L88:
	incl	%esi
	movb	%dl, (%ecx)
	incl	%ecx
	cmpl	$15, %esi
	jle	L93
	incl	-16(%ebp)
	addl	$16, %edi
	addl	12(%ebp), %ebx
	cmpl	$13, -16(%ebp)
	jle	L94
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L100:
	movb	$15, %dl
	jmp	L88
L99:
	xorl	%edx, %edx
	jmp	L88
L77:
	movb	$8, %bl
	movb	$15, %dl
	jmp	L78
	.balign 2
.globl _putfonts8_asc_sht
	.def	_putfonts8_asc_sht;	.scl	2;	.type	32;	.endef
_putfonts8_asc_sht:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$12, %esp
	movl	8(%ebp), %eax
	movl	16(%ebp), %edi
	movl	%eax, -16(%ebp)
	movl	20(%ebp), %ebx
	movl	12(%ebp), %eax
	movl	%eax, -20(%ebp)
	movl	28(%ebp), %eax
	movl	%eax, -24(%ebp)
	leal	15(%edi), %eax
	pushl	%eax
	movl	-20(%ebp), %eax
	movl	32(%ebp), %esi
	movsbl	%bl,%ebx
	leal	(%eax,%esi,8), %esi
	leal	-1(%esi), %eax
	pushl	%eax
	pushl	%edi
	pushl	-20(%ebp)
	movzbl	24(%ebp), %eax
	pushl	%eax
	movl	-16(%ebp), %eax
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	pushl	-24(%ebp)
	pushl	%ebx
	pushl	%edi
	pushl	-20(%ebp)
	movl	-16(%ebp), %eax
	pushl	4(%eax)
	pushl	(%eax)
	call	_putfonts8_asc
	movl	%edi, 16(%ebp)
	leal	16(%edi), %eax
	movl	%esi, 20(%ebp)
	movl	%eax, 24(%ebp)
	addl	$52, %esp
	movl	-20(%ebp), %eax
	movl	%eax, 12(%ebp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%ebp)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_sheet_refresh
	.balign 2
.globl _make_textbox8
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
_make_textbox8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$20, %esp
	movl	12(%ebp), %eax
	movl	16(%ebp), %esi
	addl	20(%ebp), %eax
	subl	$3, %esi
	pushl	%esi
	movl	%eax, -16(%ebp)
	movl	16(%ebp), %eax
	addl	24(%ebp), %eax
	movl	%eax, -20(%ebp)
	movl	-16(%ebp), %eax
	incl	%eax
	pushl	%eax
	movl	%eax, -24(%ebp)
	movl	12(%ebp), %eax
	pushl	%esi
	subl	$2, %eax
	pushl	%eax
	movl	%eax, -28(%ebp)
	movl	8(%ebp), %eax
	pushl	$15
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	12(%ebp), %edi
	movl	-20(%ebp), %eax
	subl	$3, %edi
	incl	%eax
	pushl	%eax
	movl	%eax, -32(%ebp)
	pushl	%edi
	movl	8(%ebp), %eax
	pushl	%esi
	pushl	%edi
	pushl	$15
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	addl	$56, %esp
	movl	-20(%ebp), %ebx
	addl	$2, %ebx
	pushl	%ebx
	pushl	-24(%ebp)
	pushl	%ebx
	pushl	%edi
	pushl	$7
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	-16(%ebp), %eax
	pushl	%ebx
	addl	$2, %eax
	pushl	%eax
	pushl	%esi
	pushl	%eax
	movl	8(%ebp), %eax
	pushl	$7
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	addl	$56, %esp
	movl	16(%ebp), %ebx
	subl	$2, %ebx
	movl	12(%ebp), %edi
	pushl	%ebx
	decl	%edi
	pushl	-16(%ebp)
	pushl	%ebx
	pushl	%edi
	pushl	$0
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	pushl	-20(%ebp)
	pushl	-28(%ebp)
	pushl	%ebx
	pushl	-28(%ebp)
	pushl	$0
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	addl	$56, %esp
	pushl	-32(%ebp)
	pushl	-16(%ebp)
	pushl	-32(%ebp)
	pushl	-28(%ebp)
	pushl	$8
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	8(%ebp), %eax
	pushl	-32(%ebp)
	pushl	-24(%ebp)
	pushl	%ebx
	pushl	-24(%ebp)
	pushl	$8
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	decl	%eax
	pushl	-20(%ebp)
	pushl	-16(%ebp)
	pushl	%eax
	pushl	%edi
	movzbl	28(%ebp), %eax
	pushl	%eax
	movl	8(%ebp), %eax
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC3:
	.ascii ">\0"
LC4:
	.ascii "mem\0"
LC5:
	.ascii "total   %dMB\0"
LC6:
	.ascii "free %dKB\0"
LC7:
	.ascii "cls\0"
LC8:
	.ascii "dir\0"
LC9:
	.ascii "filename.ext   %7d\0"
LC10:
	.ascii "type \0"
LC11:
	.ascii "File not found.\0"
LC12:
	.ascii "Bad command.\0"
	.text
	.balign 2
.globl _console_task
	.def	_console_task;	.scl	2;	.type	32;	.endef
_console_task:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$16, %edi
	pushl	%ebx
	subl	$596, %esp
	call	_task_now
	movl	$28, -600(%ebp)
	pushl	%eax
	movl	%eax, -596(%ebp)
	leal	-524(%ebp), %eax
	movl	-596(%ebp), %ebx
	pushl	%eax
	addl	$16, %ebx
	pushl	$128
	pushl	%ebx
	movl	$-1, -604(%ebp)
	call	_fifo32_init
	call	_timer_alloc
	pushl	$1
	pushl	%ebx
	pushl	%eax
	movl	%eax, -592(%ebp)
	call	_timer_init
	pushl	$50
	pushl	-592(%ebp)
	call	_timer_settime
	addl	$36, %esp
	pushl	$1
	pushl	$LC3
	pushl	$0
	pushl	$7
	pushl	$28
	pushl	$8
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	addl	$28, %esp
L104:
	call	_io_cli
	movl	-596(%ebp), %esi
	addl	$16, %esi
	pushl	%esi
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	je	L219
	pushl	%esi
	call	_fifo32_get
	movl	%eax, %ebx
	call	_io_sti
	popl	%ecx
	cmpl	$1, %ebx
	jle	L220
L109:
	cmpl	$2, %ebx
	je	L221
L114:
	cmpl	$3, %ebx
	je	L222
L115:
	leal	-256(%ebx), %eax
	cmpl	$255, %eax
	ja	L116
	cmpl	$264, %ebx
	je	L223
	cmpl	$266, %ebx
	je	L224
	cmpl	$239, %edi
	jg	L116
	movl	%edi, %eax
	movl	$8, %edx
	movl	%edx, %esi
	pushl	$1
	cltd
	idivl	%esi
	movb	%bl, -556(%ebp)
	movb	%bl, -590(%ebp,%eax)
	leal	-556(%ebp), %eax
	pushl	%eax
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	%edi
	addl	$8, %edi
	pushl	8(%ebp)
	movb	$0, -555(%ebp)
	call	_putfonts8_asc_sht
L218:
	addl	$28, %esp
L116:
	cmpl	$0, -604(%ebp)
	js	L202
	movl	-600(%ebp), %eax
	addl	$15, %eax
	pushl	%eax
	leal	7(%edi), %eax
	pushl	%eax
	pushl	-600(%ebp)
	pushl	%edi
	movzbl	-604(%ebp), %eax
	pushl	%eax
	movl	8(%ebp), %eax
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	addl	$28, %esp
L202:
	movl	-600(%ebp), %eax
	addl	$16, %eax
	pushl	%eax
	leal	8(%edi), %eax
	pushl	%eax
	pushl	-600(%ebp)
	pushl	%edi
	pushl	8(%ebp)
	call	_sheet_refresh
	addl	$20, %esp
	jmp	L104
L224:
	pushl	$1
	leal	-588(%ebp), %esi
	pushl	$LC2
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	%edi
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	movl	%edi, %eax
	movl	$8, %edx
	movl	$LC4, %edi
	movl	%edx, %ebx
	cltd
	idivl	%ebx
	movb	$0, -590(%ebp,%eax)
	pushl	8(%ebp)
	pushl	-600(%ebp)
	call	_cons_newline
	movl	$4, %ecx
	cld
	movl	%eax, -600(%ebp)
	repe
	cmpsb
	seta	%dl
	setb	%al
	addl	$36, %esp
	cmpb	%al, %dl
	jne	L121
	movl	12(%ebp), %eax
	leal	-556(%ebp), %ebx
	shrl	$20, %eax
	pushl	%eax
	pushl	$LC5
	pushl	%ebx
	call	_sprintf
	pushl	$30
	pushl	%ebx
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	$8
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	addl	$40, %esp
	pushl	8(%ebp)
	pushl	-600(%ebp)
	call	_cons_newline
	pushl	$3932160
	movl	%eax, -600(%ebp)
	call	_memman_total
	shrl	$10, %eax
	movl	%eax, (%esp)
	pushl	$LC6
	pushl	%ebx
	call	_sprintf
	pushl	$30
	pushl	%ebx
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	$8
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	addl	$48, %esp
	pushl	8(%ebp)
	pushl	-600(%ebp)
	call	_cons_newline
	pushl	8(%ebp)
	pushl	%eax
	movl	%eax, -600(%ebp)
	call	_cons_newline
	addl	$16, %esp
	movl	%eax, -600(%ebp)
L122:
	pushl	$1
	movl	$16, %edi
	pushl	$LC3
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	$8
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	jmp	L218
L121:
	cld
	leal	-588(%ebp), %esi
	movl	$LC7, %edi
	movl	$4, %ecx
	repe
	cmpsb
	jne	L123
	movl	$28, %ebx
L133:
	movl	$8, -608(%ebp)
L132:
	movl	8(%ebp), %esi
	movl	%ebx, %eax
	imull	4(%esi), %eax
	addl	-608(%ebp), %eax
	movl	(%esi), %edx
	movb	$0, (%eax,%edx)
	incl	-608(%ebp)
	cmpl	$247, -608(%ebp)
	jle	L132
	incl	%ebx
	cmpl	$155, %ebx
	jle	L133
	pushl	$156
	pushl	$248
	pushl	$28
	pushl	$8
	pushl	%esi
	call	_sheet_refresh
	addl	$20, %esp
	movl	$28, -600(%ebp)
	jmp	L122
L123:
	cld
	leal	-588(%ebp), %esi
	movl	$LC8, %edi
	movl	$4, %ecx
	repe
	cmpsb
	jne	L135
	movl	$0, -608(%ebp)
	xorl	%esi, %esi
L148:
	movb	1058304(%esi), %al
	testb	%al, %al
	je	L197
	cmpb	$-27, %al
	je	L138
	testb	$24, 1058315(%esi)
	jne	L138
	pushl	1058332(%esi)
	pushl	$LC9
	leal	-556(%ebp), %eax
	pushl	%eax
	xorl	%ebx, %ebx
	call	_sprintf
	leal	1058304(%esi), %edx
	addl	$12, %esp
L147:
	movb	(%edx), %al
	incl	%edx
	movb	%al, -556(%ebp,%ebx)
	incl	%ebx
	cmpl	$7, %ebx
	jle	L147
	movb	1058312(%esi), %al
	movb	%al, -547(%ebp)
	movb	1058313(%esi), %al
	movb	%al, -546(%ebp)
	movb	1058314(%esi), %al
	pushl	$30
	movb	%al, -545(%ebp)
	leal	-556(%ebp), %eax
	pushl	%eax
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	$8
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	pushl	8(%ebp)
	pushl	-600(%ebp)
	call	_cons_newline
	addl	$36, %esp
	movl	%eax, -600(%ebp)
L138:
	incl	-608(%ebp)
	addl	$32, %esi
	cmpl	$223, -608(%ebp)
	jle	L148
L197:
	pushl	8(%ebp)
	pushl	-600(%ebp)
L217:
	call	_cons_newline
	popl	%edi
	movl	%eax, -600(%ebp)
	popl	%eax
	jmp	L122
L135:
	cld
	leal	-588(%ebp), %esi
	movl	$LC10, %edi
	movl	$5, %ecx
	repe
	cmpsb
	jne	L150
	xorl	%ebx, %ebx
L155:
	movb	$32, -556(%ebp,%ebx)
	incl	%ebx
	cmpl	$10, %ebx
	jle	L155
	xorl	%ebx, %ebx
	movl	$5, -608(%ebp)
	cmpb	$0, -583(%ebp)
	je	L157
L164:
	movl	-608(%ebp), %eax
	movb	-588(%ebp,%eax), %dl
	cmpb	$46, %dl
	je	L225
L161:
	leal	-97(%edx), %eax
	movb	%dl, -556(%ebp,%ebx)
	cmpb	$25, %al
	ja	L163
	leal	-32(%edx), %eax
	movb	%al, -556(%ebp,%ebx)
L163:
	incl	%ebx
L158:
	incl	-608(%ebp)
	cmpl	$10, %ebx
	jg	L157
	movl	-608(%ebp), %edx
	cmpb	$0, -588(%ebp,%edx)
	jne	L164
L157:
	movl	$0, -608(%ebp)
	xorl	%ecx, %ecx
L178:
	cmpb	$0, 1058304(%ecx)
	je	L166
	testb	$24, 1058315(%ecx)
	jne	L176
	xorl	%ebx, %ebx
L177:
	movzbl	1058304(%ecx,%ebx), %edx
	movsbl	-556(%ebp,%ebx),%eax
	cmpl	%eax, %edx
	jne	L176
	incl	%ebx
	cmpl	$10, %ebx
	jle	L177
L166:
	cmpl	$223, -608(%ebp)
	jg	L179
	movl	-608(%ebp), %eax
	sall	$5, %eax
	cmpb	$0, 1058304(%eax)
	je	L179
	movl	1058332(%eax), %ebx
	movl	$8, %edi
	movzwl	1058330(%eax), %eax
	sall	$9, %eax
	movl	$0, -608(%ebp)
	leal	1064448(%eax), %esi
	cmpl	%ebx, -608(%ebp)
	jge	L197
L196:
	movl	-608(%ebp), %ecx
	movb	(%ecx,%esi), %al
	movb	%al, -556(%ebp)
	cmpb	$9, %al
	movb	$0, -555(%ebp)
	je	L185
	movb	-556(%ebp), %al
	cmpb	$10, %al
	je	L216
	cmpb	$13, %al
	je	L182
	pushl	$1
	leal	-556(%ebp), %eax
	pushl	%eax
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	%edi
	addl	$8, %edi
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	addl	$28, %esp
	cmpl	$248, %edi
	je	L216
L182:
	incl	-608(%ebp)
	cmpl	%ebx, -608(%ebp)
	jl	L196
	jmp	L197
L216:
	pushl	8(%ebp)
	pushl	-600(%ebp)
	movl	$8, %edi
	call	_cons_newline
	movl	%eax, -600(%ebp)
	popl	%eax
	popl	%edx
	jmp	L182
L185:
	pushl	$1
	pushl	$LC2
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	%edi
	addl	$8, %edi
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	addl	$28, %esp
	cmpl	$248, %edi
	je	L226
L188:
	leal	-8(%edi), %eax
	andl	$31, %eax
	jne	L185
	jmp	L182
L226:
	pushl	8(%ebp)
	pushl	-600(%ebp)
	movl	$8, %edi
	call	_cons_newline
	popl	%ecx
	movl	%eax, -600(%ebp)
	popl	%eax
	jmp	L188
L179:
	pushl	$15
	pushl	$LC11
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	$8
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	pushl	8(%ebp)
	pushl	-600(%ebp)
	call	_cons_newline
	addl	$36, %esp
	movl	%eax, -600(%ebp)
	jmp	L197
L176:
	incl	-608(%ebp)
	addl	$32, %ecx
	cmpl	$223, -608(%ebp)
	jle	L178
	jmp	L179
L225:
	cmpl	$8, %ebx
	jg	L161
	movl	$8, %ebx
	jmp	L158
L150:
	cmpb	$0, -588(%ebp)
	je	L122
	pushl	$12
	pushl	$LC12
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	$8
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	pushl	8(%ebp)
	pushl	-600(%ebp)
	call	_cons_newline
	addl	$36, %esp
	pushl	8(%ebp)
	movl	%eax, -600(%ebp)
	pushl	%eax
	jmp	L217
L223:
	cmpl	$16, %edi
	jle	L116
	pushl	$1
	pushl	$LC2
	pushl	$0
	pushl	$7
	pushl	-600(%ebp)
	pushl	%edi
	subl	$8, %edi
	pushl	8(%ebp)
	call	_putfonts8_asc_sht
	jmp	L218
L222:
	movl	-600(%ebp), %eax
	addl	$15, %eax
	pushl	%eax
	leal	7(%edi), %eax
	pushl	%eax
	movl	8(%ebp), %eax
	pushl	-600(%ebp)
	pushl	%edi
	pushl	$0
	pushl	4(%eax)
	pushl	(%eax)
	call	_boxfill8
	addl	$28, %esp
	movl	$-1, -604(%ebp)
	jmp	L115
L221:
	movl	$7, -604(%ebp)
	jmp	L114
L220:
	testl	%ebx, %ebx
	je	L110
	pushl	$0
	pushl	%esi
	pushl	-592(%ebp)
	call	_timer_init
	addl	$12, %esp
	cmpl	$0, -604(%ebp)
	js	L112
	movl	$7, -604(%ebp)
L112:
	pushl	$50
	pushl	-592(%ebp)
	call	_timer_settime
	popl	%eax
	popl	%edx
	jmp	L109
L110:
	pushl	$1
	pushl	%esi
	pushl	-592(%ebp)
	call	_timer_init
	addl	$12, %esp
	cmpl	$0, -604(%ebp)
	js	L112
	movl	$0, -604(%ebp)
	jmp	L112
L219:
	pushl	-596(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%ebx
	jmp	L104
	.balign 2
.globl _cons_newline
	.def	_cons_newline;	.scl	2;	.type	32;	.endef
_cons_newline:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$28, %edi
	pushl	%ebx
	cmpl	$139, 8(%ebp)
	jg	L239
	addl	$16, 8(%ebp)
L229:
	movl	8(%ebp), %eax
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L239:
	movl	$8, %esi
L238:
	movl	12(%ebp), %eax
	movl	%edi, %edx
	movl	4(%eax), %ecx
	movl	(%eax), %ebx
	leal	16(%edi), %eax
	imull	%ecx, %eax
	imull	%ecx, %edx
	leal	(%eax,%esi), %eax
	leal	(%edx,%esi), %edx
	incl	%esi
	movb	(%eax,%ebx), %al
	cmpl	$247, %esi
	movb	%al, (%edx,%ebx)
	jle	L238
	incl	%edi
	cmpl	$139, %edi
	jle	L239
	movl	$140, %edi
L249:
	movl	$8, %esi
L248:
	movl	12(%ebp), %edx
	movl	%edi, %eax
	movl	%edx, %ecx
	imull	4(%edx), %eax
	movl	(%edx), %edx
	leal	(%eax,%esi), %eax
	incl	%esi
	cmpl	$247, %esi
	movb	$0, (%eax,%edx)
	jle	L248
	incl	%edi
	cmpl	$155, %edi
	jle	L249
	pushl	$156
	pushl	$248
	pushl	$28
	pushl	$8
	pushl	%ecx
	call	_sheet_refresh
	addl	$20, %esp
	jmp	L229
	.def	_memman_total;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_cons_newline;	.scl	2;	.type	32;	.endef
	.def	_task_now;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_make_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc_sht;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_wait_KBC_sendready;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_timer_settime;	.scl	2;	.type	32;	.endef
	.def	_timer_init;	.scl	2;	.type	32;	.endef
	.def	_timer_alloc;	.scl	2;	.type	32;	.endef
	.def	_console_task;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
